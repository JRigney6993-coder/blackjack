<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Blackjack Game</title>
    <style>
        html,
        body {
            margin: 0;
            padding: 0;
            height: 100%;
            background: linear-gradient(to bottom, #260101, #5c0202);
        }

        #gameBoard {
            display: flex;
            flex-direction: row;
            width: 90%;
            height: 80%;
            border: 2px solid #6c3a3a;
            border-radius: 15px;
            color: #e8e6d1;
            margin: 5% auto;
        }

        #leftPanel {
            flex: 2;
            padding: 20px;
            display: flex;
            flex-direction: column;
            justify-content: space-between;
        }

        #rightPanel {
            flex: 1;
            padding: 20px;
            border-left: 2px solid #6c3a3a;
        }

        #dealer,
        #player {
            flex: 1;
            display: flex;
            flex-direction: column;
            align-items: center;
        }

        .title {
            font-size: 2em;
            margin-bottom: 20px;
            color: #e8e6d1;
        }

        .actions {
            display: flex;
            gap: 20px;
        }

        .btn {
            background-color: #6c3a3a;
            color: #e8e6d1;
            border: none;
            padding: 10px 15px;
            border-radius: 5px;
            cursor: pointer;
            transition: background-color 0.3s;
        }

        .leaderboard-list {
            list-style-type: none;
            padding: 0;
            margin-top: 20px;
        }

        .leaderboard-list li {
            padding: 10px 0;
            border-bottom: 1px solid #6c3a3a;
        }

        .leaderboard-list li:last-child {
            border-bottom: none;
        }

    
        #playerCards,
#dealerCards {
    display: flex;
    gap: 20px; 
    margin-bottom: 20px; 
}

.card {
    width: 60px;
    height: 90px;
    perspective: 1000px;
}

.card .card-inner {
    width: 100%;
    height: 100%;
    transform-style: preserve-3d;
    transition: transform 0.5s;
}

.card .card-inner.flipped {
    transform: rotateY(180deg);
}

.card .card-face {
    position: absolute;
    width: 100%;
    height: 100%;
    backface-visibility: hidden;
}

@keyframes slideInFromBottom {
    from {
        transform: translateY(100%);
        opacity: 0;
    }
    to {
        transform: translateY(0);
        opacity: 1;
    }
}

.slide-in {
    animation: slideInFromBottom 0.5s forwards;
}

.card .card-face.front {
    transform: rotateY(0deg);
}

.card .card-face.back {
    transform: rotateY(180deg);
}


    .card img {
        width: 100%;
        height: 100%;
        backface-visibility: hidden;
    }

    .actions {
    display: flex;
    gap: 20px;
    margin-top: 20px; 
}

    </style>
</head>

<body>
    <div id="gameBoard">
        <div id="leftPanel">
            <!-- Dealer -->
            <div id="dealer">
                <div class="title">Dealer</div>
                <div id="dealerCards"></div>
            </div>

            <!-- Player -->
            <div id="player">
                <div class="title">Player</div>
                <div id="playerCards"></div>
<div class="actions">
    <button class="btn" onclick="hitPlayer()">Hit</button>
    <button class="btn" onclick="stand()">Stand</button>
    <button class="btn" onclick="newGame()">New Game</button>
</div>

            </div>
            <div id="gameMessage" class="title" style="margin: 0;"></div>
        </div>

        <!-- Leaderboard -->
        <div id="rightPanel">
            <div class="title">Leaderboard</div>
            <ul class="leaderboard-list">

            </ul>
        </div>
    </div>
    


    <script>
let dealerCards = [];
let playerCards = [];

document.addEventListener("DOMContentLoaded", function() {
    fetchTopPlayers();
    startGame();
});

async function fetchTopPlayers() {
    const response = await fetch('http://localhost:4001/game/topPlayers');
    const players = await response.json();
    const leaderboard = document.querySelector('.leaderboard-list');
    leaderboard.innerHTML = '';
    players.forEach(player => {
        const li = document.createElement('li');
        li.textContent = `${player.first_name} ${player.last_name} - Score: ${player.difference}`;
        leaderboard.appendChild(li);
    });
}

function startGame() {
    fetch('/game/start')
    .then(response => response.json())
    .then(data => {
        dealerCards = data.dealerCards;
        playerCards = data.playerCards;
        newGame()
    });
}


function newGame() {
    fetch('/game/newGame')
    .then(response => response.json())
    .then(data => {
        dealerCards = data.dealerCards;
        playerCards = data.playerCards;
        renderCards(true);
    });
}



function hitPlayer() {
    fetch('/game/hit')
    .then(response => response.json())
    .then(data => {
        playerCards = data.playerCards;
        renderCards();

        const gameMessage = document.getElementById('gameMessage');

        if (data.message === 'Player busts! Dealer wins!') {
            gameMessage.textContent = 'Player busts! Dealer wins!';
        } else if (data.message === 'Player automatically wins with 5 cards!') {
            gameMessage.textContent = 'Player automatically wins with 5 cards!';
        } else {
            gameMessage.textContent = ''; 
        }
    });
}



function stand() {
    // Flip the card first
    const hiddenCard = document.querySelector('#dealerCards .card-inner');
    if (hiddenCard) {
        hiddenCard.classList.add('flipped');
    }

    setTimeout(() => {
        fetch('/game/stand')
        .then(response => response.json())
        .then(data => {
            dealerCards = data.dealerCards;
            renderCards();

            document.getElementById('gameMessage').textContent = data.message;
        });
    }, 500);
}





function renderCards(newGame = false) {
    const dealerDiv = document.getElementById('dealerCards');
    const playerDiv = document.getElementById('playerCards');

    const isDealerCardFlipped = document.querySelector('#dealerCards .card-inner.flipped');

    dealerDiv.innerHTML = dealerCards.map((card, index) => {
        if (index === 0) {
            return `
                <div class="card ${newGame ? 'slide-in' : ''}">
                    <div class="card-inner ${isDealerCardFlipped ? 'flipped' : ''}"> 
                        <div class="card-face front"><img src="https://www.deckofcardsapi.com/static/img/back.png"></div>
                        <div class="card-face back"><img src="${card.image}"></div>
                    </div>
                </div>
            `;
        }
        return `<img src="${card.image}" class="card ${newGame ? 'slide-in' : ''}">`;
    }).join("");

    playerDiv.innerHTML = playerCards.map(card => `<img src="${card.image}" class="card ${newGame ? 'slide-in' : ''}">`).join("");
}



    </script>

</body>

</html>